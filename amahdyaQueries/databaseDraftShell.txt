Mongo Draft Query

use amazoncase

db.createCollection("book", {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			required: ["ISBN", "title", "price", "pages", "copies", "language"],
			properties: {
				ISBN: {
					bsonType: "string"
				},
				title: {
					bsonType: "string"
				},
				price: {
					bsonType: "decimal"
				},
				pages: {
					bsonType: "int"
				},
				copies: {
					bsonType: "int"
				},
				language: {
					bsonType: "string"
				},
				characters: {
					bsonType: "array",
					items: {bsonType: "string"}
				},
				category_id: {
					bsonType: "array",
					items: {bsonType: "objectId"}
				},
				author_id: {
					bsonType: "array",
					items: {bsonType: "objectId"}
				}
			}
		}
	}
})

db.createCollection("author", {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			required: ["name", "email"],
			properties: {
				name: {
					bsonType: "string"
				},
				address: {
					bsonType: "string"
				},
				email: {
					bsonType: "string"
				},
				password: {
					bsonType: "string"
				}
			}
		}
	}
})

db.createCollection("category", {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			required: ["name", "parent"],
			properties: {
				name: {
					bsonType: "string"
				},
				parent: {
					bsonType: "string"	
				}
			}
		}
	}
})

db.createCollection("order", {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			required: ["date", "order_state"],
			properties: {
				date: {
               				bsonType: "string",
               				description: "format: yyyy-MM-dd"
				},
				order_state: {
					bsonType: "string"
				},
				totalPrice: {
					bsonType: "decimal"
				},
				book: {
					bsonType: "object",
					required: ["ISBN", "price", "quantity"],
					properties: {
						ISBN: {bsonType: "string"},
						price: {bsonType: "decimal"},
						quantity: {bsonType: "int"}
					}
				}
			}
		}
	}
})

db.createCollection("customer", {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			required: ["name", "address", "email", "password"],
			properties: {
				name: {
               				bsonType: "string"
				},
				address: {
               				bsonType: "object",
					required: ["street", "town", "zip"],
					properties: {
						street: {bsonType: "string"},
						town: {bsonType: "string"},
						zip: {bsonType: "int", minimum: 1000, maximum: 9999}
					}
				},
				email: {
               				bsonType: "string"
				},
				password: {
               				bsonType: "string"
				},
				order_numbers: {
					bsonType: "array",
					uniqueItems: true,
					items: {bsonType: "objectId"}
				}
			}
		}
	}
})